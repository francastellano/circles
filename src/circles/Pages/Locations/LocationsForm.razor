@page "/circles/{CircleId}/locations/add"

@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]

@inject IHttpClientFactory HttpClientFactory

@inject NavigationManager Navigation


<h2>Add new location</h2>

<div>
    <Message @ref="messageComponent" />
</div>

<NavLink class="nav-link" href="@($"circles/{CircleId}")">Circle</NavLink>

<EditForm Model="formParams" OnValidSubmit="AddLocation" FormName="add">

    <div class="form-floating mb-3">
        <input id="Denomination" type="text" placeholder="Denomination" @bind="formParams.Denomination"
            class="form-control" autocomplete="off">
        <label for="Denomination" class="form-label">Denomination</label>
    </div>

    <div class="form-floating mb-3">
        <input id="Latitude" type="number" step="any" placeholder="Latitude" @bind="formParams.Latitude"
            class="form-control" autocomplete="off">
        <label for="Latitude" class="form-label">Latitude</label>
    </div>

    <div class="form-floating mb-3">
        <input id="Longitude" type="number" step="any" placeholder="Longitude" @bind="formParams.Longitude"
            class="form-control" autocomplete="off">
        <label for="Longitude" class="form-label">Longitude</label>
    </div>

    <div class="form-floating mb-3">
        <button type="submit" class="btn btn-lg btn-primary" disabled="@_loading">Add</button>
    </div>

</EditForm>



@code {
    bool _loading;
    private Message messageComponent = new();

    [Parameter]
    public string CircleId { get; set; } = string.Empty;
    private AddFormParams formParams { get; set; } = new();


    public class AddFormParams
    {
        public string CircleId { get; set; } = string.Empty;
        public string Denomination { get; set; } = string.Empty;
        public double Latitude { get; set; }
        public double Longitude { get; set; }
    }

    public async Task AddLocation()
    {
        _loading = true;
        formParams.CircleId = CircleId;

        var httpClient = HttpClientFactory.CreateClient(CirclesConfiguration.DefaultHttpClient);

        // Make the POST request
        var response = await httpClient.PostAsJsonAsync("/api/v1/locations", formParams);

        if (response.IsSuccessStatusCode)
        {
            messageComponent.ShowMessage("Locations has been created", 3);
            Navigation.NavigateTo($"circles/{CircleId}/locations");
        }
        else
        {
            messageComponent.ShowMessage("An error has happened while creating the Locations", 3);
        }


        _loading = false;
    }


}