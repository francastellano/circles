@page "/circles/{Id}"

@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]

@using circles.api.contracts.Circles.Queries.GetById

@inject NavigationManager Navigation
@inject IHttpClientFactory HttpClientFactory

@using Microsoft.Extensions.Localization
@inject IStringLocalizer<General> GeneralLocalizer


@if (Result != null)
{
    <h2 class="title">@Result.Denomination</h2>

    <div class="d-flex flex-column">
        <button class="nav-link mb-2" @onclick="@(()=> GoDetails("members"))">Members</button>
        <button class="nav-link mb-2" @onclick="@(()=> GoDetails("activities"))">
            @GeneralLocalizer["activities.title"]</button>
        <button class="nav-link mb-2" @onclick="@(()=> GoDetails("admin"))">@GeneralLocalizer["general.admin"]</button>
    </div>

    <div>
        <div> Administrator:</div>
        <div> <a href="mailto:@Result.Creator">@Result.Creator</a></div>
    </div>


}

@code {

    [Parameter, EditorRequired]
    public string Id { get; set; } = string.Empty;

    public CircleGetByIdResult? Result { get; set; }



    protected override async Task OnInitializedAsync()
    {
        await GetById();
    }

    public async Task GetById()
    {
        var httpClient = HttpClientFactory.CreateClient(CirclesConfiguration.DefaultHttpClient);

        Result = await
        httpClient.GetFromJsonAsync<CircleGetByIdResult>($"api/v1/circles/{Id}");
    }
    public void GoDetails(string address)
    {
        Navigation.NavigateTo($"circles/{Id}/{address}");
    }
}