@page "/circles/{CircleId}/members"
@using circles.api.contracts.Members.Queries
@using circles.Pages.Members

@inject IHttpClientFactory HttpClientFactory

<h1>Circle Members</h1>

<NavLink class="nav-link" href="@($"circles/{CircleId}")">Circle</NavLink>

@if (members != null)
{
    <ul>
    @foreach (var member in members)
        {
            <li>@member.Email</li>

        }
    </ul>


    <MemberForm CircleId="@CircleId" />
}
@if (_loading)
{
    <Loading />
}



@code {
    [Parameter, EditorRequired]
    public string CircleId { get; set; } = string.Empty;

    List<CircleListGetMemberResult>? members;

    protected override async Task OnInitializedAsync()
    {
        await GetMembers();
    }

    public async Task GetMembers()
    {
        var httpClient = HttpClientFactory.CreateClient(CirclesConfiguration.DefaultHttpClient);

        members = await
        httpClient.GetFromJsonAsync<List<CircleListGetMemberResult>>($"api/v1/circles/{CircleId}/members");
    }


}